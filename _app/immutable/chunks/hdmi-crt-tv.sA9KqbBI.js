import{s as n,n as o}from"./scheduler.NfQNRMHk.js";import{S as i,i as l,g as h,h as c,z as p,a as m,f as u}from"./index.q30xkkrS.js";function f(r){let t,a=`If you’ve ever had to work with <a href="https://www.ros.org/" rel="nofollow">Robot Operating System 2</a> (ROS2) you’ll know that getting it set up is the least of your issues.
That’s why I developed <code>aioros2</code>, which leverages <a href="https://docs.python.org/3/library/asyncio.html" rel="nofollow">asyncio</a> among other python features to wrap <a href="https://github.com/ros2/rclpy" rel="nofollow">rclpy</a> in an intuitive, pythonic manner.`;return{c(){t=h("p"),t.innerHTML=a},l(e){t=c(e,"P",{"data-svelte-h":!0}),p(t)!=="svelte-n522lk"&&(t.innerHTML=a)},m(e,s){m(e,t,s)},p:o,i:o,o,d(e){e&&u(t)}}}const d={title:"aioros2",date:"20204-6-30",github:"https://github.com/California-Strawberry-Commission/laser-runner-cutter/tree/main/ros2/aioros2",categories:["python","ros2","software"],coverImage:"/images/jerry-zhang-ePpaQC2c1xA-unsplash.jpg",excerpt:"A Pythonic way to interact with ROS2"};class w extends i{constructor(t){super(),l(this,t,null,f,n,{})}}export{w as default,d as metadata};
